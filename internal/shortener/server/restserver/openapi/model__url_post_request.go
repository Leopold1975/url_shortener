/*
URLShortener API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UrlPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UrlPostRequest{}

// UrlPostRequest struct for UrlPostRequest
type UrlPostRequest struct {
	LongUrl string `json:"long_url"`
}

type _UrlPostRequest UrlPostRequest

// NewUrlPostRequest instantiates a new UrlPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlPostRequest(longUrl string) *UrlPostRequest {
	this := UrlPostRequest{}
	this.LongUrl = longUrl
	return &this
}

// NewUrlPostRequestWithDefaults instantiates a new UrlPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlPostRequestWithDefaults() *UrlPostRequest {
	this := UrlPostRequest{}
	return &this
}

// GetLongUrl returns the LongUrl field value
func (o *UrlPostRequest) GetLongUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LongUrl
}

// GetLongUrlOk returns a tuple with the LongUrl field value
// and a boolean to check if the value has been set.
func (o *UrlPostRequest) GetLongUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LongUrl, true
}

// SetLongUrl sets field value
func (o *UrlPostRequest) SetLongUrl(v string) {
	o.LongUrl = v
}

func (o UrlPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UrlPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["long_url"] = o.LongUrl
	return toSerialize, nil
}

func (o *UrlPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"long_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUrlPostRequest := _UrlPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUrlPostRequest)

	if err != nil {
		return err
	}

	*o = UrlPostRequest(varUrlPostRequest)

	return err
}

type NullableUrlPostRequest struct {
	value *UrlPostRequest
	isSet bool
}

func (v NullableUrlPostRequest) Get() *UrlPostRequest {
	return v.value
}

func (v *NullableUrlPostRequest) Set(val *UrlPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlPostRequest(val *UrlPostRequest) *NullableUrlPostRequest {
	return &NullableUrlPostRequest{value: val, isSet: true}
}

func (v NullableUrlPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


