/*
URLShortener API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UrlPost201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UrlPost201Response{}

// UrlPost201Response struct for UrlPost201Response
type UrlPost201Response struct {
	ShortUrl *string `json:"short_url,omitempty"`
}

// NewUrlPost201Response instantiates a new UrlPost201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlPost201Response() *UrlPost201Response {
	this := UrlPost201Response{}
	return &this
}

// NewUrlPost201ResponseWithDefaults instantiates a new UrlPost201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlPost201ResponseWithDefaults() *UrlPost201Response {
	this := UrlPost201Response{}
	return &this
}

// GetShortUrl returns the ShortUrl field value if set, zero value otherwise.
func (o *UrlPost201Response) GetShortUrl() string {
	if o == nil || IsNil(o.ShortUrl) {
		var ret string
		return ret
	}
	return *o.ShortUrl
}

// GetShortUrlOk returns a tuple with the ShortUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlPost201Response) GetShortUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ShortUrl) {
		return nil, false
	}
	return o.ShortUrl, true
}

// HasShortUrl returns a boolean if a field has been set.
func (o *UrlPost201Response) HasShortUrl() bool {
	if o != nil && !IsNil(o.ShortUrl) {
		return true
	}

	return false
}

// SetShortUrl gets a reference to the given string and assigns it to the ShortUrl field.
func (o *UrlPost201Response) SetShortUrl(v string) {
	o.ShortUrl = &v
}

func (o UrlPost201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UrlPost201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShortUrl) {
		toSerialize["short_url"] = o.ShortUrl
	}
	return toSerialize, nil
}

type NullableUrlPost201Response struct {
	value *UrlPost201Response
	isSet bool
}

func (v NullableUrlPost201Response) Get() *UrlPost201Response {
	return v.value
}

func (v *NullableUrlPost201Response) Set(val *UrlPost201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlPost201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlPost201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlPost201Response(val *UrlPost201Response) *NullableUrlPost201Response {
	return &NullableUrlPost201Response{value: val, isSet: true}
}

func (v NullableUrlPost201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlPost201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


