/*
URLShortener API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the URL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &URL{}

// URL struct for URL
type URL struct {
	LongUrl *string `json:"long_url,omitempty"`
	ShortUrl *string `json:"short_url,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Clicks *int64 `json:"clicks,omitempty"`
}

// NewURL instantiates a new URL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewURL() *URL {
	this := URL{}
	return &this
}

// NewURLWithDefaults instantiates a new URL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewURLWithDefaults() *URL {
	this := URL{}
	return &this
}

// GetLongUrl returns the LongUrl field value if set, zero value otherwise.
func (o *URL) GetLongUrl() string {
	if o == nil || IsNil(o.LongUrl) {
		var ret string
		return ret
	}
	return *o.LongUrl
}

// GetLongUrlOk returns a tuple with the LongUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URL) GetLongUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LongUrl) {
		return nil, false
	}
	return o.LongUrl, true
}

// HasLongUrl returns a boolean if a field has been set.
func (o *URL) HasLongUrl() bool {
	if o != nil && !IsNil(o.LongUrl) {
		return true
	}

	return false
}

// SetLongUrl gets a reference to the given string and assigns it to the LongUrl field.
func (o *URL) SetLongUrl(v string) {
	o.LongUrl = &v
}

// GetShortUrl returns the ShortUrl field value if set, zero value otherwise.
func (o *URL) GetShortUrl() string {
	if o == nil || IsNil(o.ShortUrl) {
		var ret string
		return ret
	}
	return *o.ShortUrl
}

// GetShortUrlOk returns a tuple with the ShortUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URL) GetShortUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ShortUrl) {
		return nil, false
	}
	return o.ShortUrl, true
}

// HasShortUrl returns a boolean if a field has been set.
func (o *URL) HasShortUrl() bool {
	if o != nil && !IsNil(o.ShortUrl) {
		return true
	}

	return false
}

// SetShortUrl gets a reference to the given string and assigns it to the ShortUrl field.
func (o *URL) SetShortUrl(v string) {
	o.ShortUrl = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *URL) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URL) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *URL) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *URL) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetClicks returns the Clicks field value if set, zero value otherwise.
func (o *URL) GetClicks() int64 {
	if o == nil || IsNil(o.Clicks) {
		var ret int64
		return ret
	}
	return *o.Clicks
}

// GetClicksOk returns a tuple with the Clicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URL) GetClicksOk() (*int64, bool) {
	if o == nil || IsNil(o.Clicks) {
		return nil, false
	}
	return o.Clicks, true
}

// HasClicks returns a boolean if a field has been set.
func (o *URL) HasClicks() bool {
	if o != nil && !IsNil(o.Clicks) {
		return true
	}

	return false
}

// SetClicks gets a reference to the given int64 and assigns it to the Clicks field.
func (o *URL) SetClicks(v int64) {
	o.Clicks = &v
}

func (o URL) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o URL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LongUrl) {
		toSerialize["long_url"] = o.LongUrl
	}
	if !IsNil(o.ShortUrl) {
		toSerialize["short_url"] = o.ShortUrl
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Clicks) {
		toSerialize["clicks"] = o.Clicks
	}
	return toSerialize, nil
}

type NullableURL struct {
	value *URL
	isSet bool
}

func (v NullableURL) Get() *URL {
	return v.value
}

func (v *NullableURL) Set(val *URL) {
	v.value = val
	v.isSet = true
}

func (v NullableURL) IsSet() bool {
	return v.isSet
}

func (v *NullableURL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableURL(val *URL) *NullableURL {
	return &NullableURL{value: val, isSet: true}
}

func (v NullableURL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableURL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


